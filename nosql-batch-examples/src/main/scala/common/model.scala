package common

object anx {
  
  val KEYSPACE = "anx"
  
  val TABLE_STD_FEED = "auctions"

  val COLUMNS = List("auction_id_64", "datetime", "user_tz_offset", "width", "height", "media_type", "fold_position", "event_type", "imp_type", "payment_type", "media_cost_dollars_cpm", "revenue_type", "buyer_spend", "buyer_bid", "ecp", "eap", "is_imp", "is_learn", "predict_type_rev", "user_id_64", "ip_address", "ip_address_trunc", "geo_country", "geo_region", "operating_system", "brower", "language", "venue_id", "seller_member_id", "publisher_id", "site_id", "site_domain", "tag_id", "external_inv_id", "reserve_price", "seller_revenue_cpm", "media_buy_rev_share_pct", "pub_rule_id", "seller_currency", "publisher_currency", "publisher_exchange_rate", "serving_fees_cpm", "serving_fees_revshare", "buyer_member_id", "advertiser_id", "brand_id", "advertiser_frequency", "advertiser_recency", "insertion_order_id", "campaign_group_id", "campaign_id", "creative_id", "creative_freq", "creative_rec", "cadence_modifier", "can_convert", "user_group_id", "is_control", "controller_pct", "controller_creative_pct", "is_click", "pixel_id", "is_remarketing", "post_click_conv", "post_view_conv", "post_click_revenue", "post_view_revenue", "order_id", "external_data", "pricing_type", "booked_revenue_dollars", "booked_revenue_adv_curr", "commission_cpm", "commision_revshare", "auction_service_deduction", "auction_service_fees", "creative_overage_fees", "clear_fees", "buyer_currency", "advertiser_currency", "advertiser_exchange_rate", "latitude", "longitude", "device_unique_id", "device_id", "carrier_id", "deal_id", "view_result", "application_id", "supply_type", "sdk_version", "ozone_id", "billing_period_id")

  val SCHEMA = "CREATE TABLE IF NOT EXISTS anx.auctions (auction_id_64 bigint PRIMARY KEY, datetime timestamp, user_tz_offset int, width int, height int, media_type int, fold_position int, event_type text, imp_type int, payment_type int, media_cost_dollars_cpm double, revenue_type int, buyer_spend double, buyer_bid double, ecp double, eap double, is_imp int, is_learn int, predict_type_rev int, user_id_64 bigint, ip_address text, ip_address_trunc text, geo_country text, geo_region text, operating_system int, brower int, language int, venue_id int, seller_member_id int, publisher_id int, site_id int, site_domain text, tag_id int, external_inv_id int, reserve_price double, seller_revenue_cpm double, media_buy_rev_share_pct double, pub_rule_id int, seller_currency text, publisher_currency text, publisher_exchange_rate double, serving_fees_cpm double, serving_fees_revshare double, buyer_member_id int, advertiser_id int, brand_id int, advertiser_frequency int,  advertiser_recency int, insertion_order_id int, campaign_group_id int, campaign_id int, creative_id int, creative_freq int, creative_rec int, cadence_modifier double, can_convert int, user_group_id int, is_control int, controller_pct double, controller_creative_pct int, is_click int, pixel_id int, is_remarketing int, post_click_conv int, post_view_conv int, post_click_revenue double, post_view_revenue double, order_id text, external_data text, pricing_type text, booked_revenue_dollars double, booked_revenue_adv_curr double, commission_cpm double, commision_revshare double, auction_service_deduction double, auction_service_fees double, creative_overage_fees double, clear_fees double, buyer_currency text, advertiser_currency text, advertiser_exchange_rate double, latitude text, longitude text, device_unique_id text, device_id int, carrier_id int, deal_id int, view_result text, application_id text, supply_type text, sdk_version text, ozone_id int, billing_period_id int)"

  val TYPES:List[Converter] = List(bigint, timestamp, int, int, int, int, int, text, int, int, double, int, double, double, double, double, int, int, int, bigint, text, text, text, text, int, int, int, int, int, int, int, text, int, int, double, double, double, int, text, text, double, double, double, int, int, int, int, int, int, int, int, int, int, int, double, int, int, int, double, int, int, int, int, int, int, double, double, text, text, text, double, double, double, double, double, double, double, double, text, text, double, text, text, text, int, int, int, text, text, text, text, int, int)

  def DROP_KEYSPACE_STMT(keyspace: String): String = s"DROP KEYSPACE IF EXISTS $keyspace"
  def CREATE_KEYSPACE_STMT(keyspace: String): String = s"CREATE KEYSPACE $keyspace WITH REPLICATION = {'class': 'SimpleStrategy', 'replication_factor': 1 }"

  val INSERT_STMT = "INSERT INTO anx.auctions (" +
  "auction_id_64, datetime, user_tz_offset, width, height, media_type, fold_position, event_type, imp_type, payment_type, media_cost_dollars_cpm, revenue_type, buyer_spend, buyer_bid, ecp, eap, is_imp, is_learn, predict_type_rev, user_id_64, ip_address, ip_address_trunc, geo_country, geo_region, operating_system, brower, language, venue_id, seller_member_id, publisher_id, site_id, site_domain, tag_id, external_inv_id, reserve_price, seller_revenue_cpm, media_buy_rev_share_pct, pub_rule_id, seller_currency, publisher_currency, publisher_exchange_rate, serving_fees_cpm, serving_fees_revshare, buyer_member_id, advertiser_id, brand_id, advertiser_frequency, advertiser_recency, insertion_order_id, campaign_group_id, campaign_id, creative_id, creative_freq, creative_rec, cadence_modifier, can_convert, user_group_id, is_control, controller_pct, controller_creative_pct, is_click, pixel_id, is_remarketing, post_click_conv, post_view_conv, post_click_revenue, post_view_revenue, order_id, external_data, pricing_type, booked_revenue_dollars, booked_revenue_adv_curr, commission_cpm, commision_revshare, auction_service_deduction, auction_service_fees, creative_overage_fees, clear_fees, buyer_currency, advertiser_currency, advertiser_exchange_rate, latitude, longitude, device_unique_id, device_id, carrier_id, deal_id, view_result, application_id, supply_type, sdk_version, ozone_id, billing_period_id" + 
  ") VALUES (" +
  "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?" +
  ")"
}
